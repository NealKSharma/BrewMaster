@model BrewMaster.Models.ProductViewModel
@using System.Data

@{
    ViewData["Title"] = "Product Management Page";
    var table = ViewBag.ProductTable as DataTable;
}

<div class="product-container">

    <div class="product-display">
        <h2>Products List</h2>

        <div class="search-container">
            <input type="text" id="searchInput" placeholder="Search products by name..." class="search-input" />
            <div class="search-info" id="searchInfo"></div>
        </div>

        <div id="products-table-container">
            @if (table != null && table.Rows.Count > 0)
            {
                <table class="product-table" id="productTable">
                    <thead>
                        <tr>
                            @foreach (DataColumn col in table.Columns)
                            {
                                <th>@col.ColumnName</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (DataRow row in table.Rows)
                        {
                            <tr onclick="fillForm('@row["ProductId"]', '@Html.Raw(row["ProductName"]?.ToString().Replace("'", "\\'"))', '@Html.Raw(row["ProductDescription"]?.ToString().Replace("'", "\\'").Replace("\n", "\\n").Replace("\r", ""))', '@row["Price"]', '@row["Stock"]')" style="cursor: pointer;" class="product-row">
                                @foreach (var item in row.ItemArray)
                                {
                                    @if (item is byte[] bytes)
                                    {
                                        <td>[Image Stored]</td>
                                    }
                                    else
                                    {
                                        <td>@item</td>
                                    }
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div style="display: flex; justify-content: center; align-items: center; height: 70%;">
                    <p style="text-align: center; font-size: 1.2rem; color: #F5DEB3;">
                        No products found.
                    </p>
                </div>
            }
        </div>
    </div>

    <div class="product-management">
        <h2>Product Manager</h2>
        <form id="productForm" method="post" asp-action="ManageProducts" enctype="multipart/form-data" class="form-body">

            <!-- Hidden ProductId field -->
            <input type="hidden" asp-for="ProductId" id="hiddenProductId" />

            <div class="form-group">
                <label asp-for="ProductName" class="form-label">Product Name</label>
                <input asp-for="ProductName" class="form-input" placeholder="Enter the Product Name" />
                <span asp-validation-for="ProductName" class="validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="ProductDescription" class="form-label">Product Description</label>
                <textarea asp-for="ProductDescription" class="form-input" rows="4" placeholder="Enter the Product Description"></textarea>
                <span asp-validation-for="ProductDescription" class="validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="Price" class="form-label">Price</label>
                <input asp-for="Price" class="form-input" placeholder="Enter the price" value="@(Model.Price == 0 ? "" : Model.Price.ToString())" />
                <span asp-validation-for="Price" class="validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="Stock" class="form-label">Stock</label>
                <input asp-for="Stock" class="form-input" placeholder="Enter the stock" value="@(Model.Stock == 0 ? "" : Model.Stock.ToString())" />
                <span asp-validation-for="Stock" class="validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="ImageUpload" class="form-label">Product Image</label>
                <input asp-for="ImageUpload" type="file" class="form-input" name="ImageUpload" />
                <span asp-validation-for="ImageUpload" class="validation-error"></span>
            </div>

            <div id="message-container">
                @if (TempData["ProductError"] != null)
                {
                    <div style="color: #FF6B6B; background-color: rgba(255, 107, 107, 0.1); border: 1px solid #FF6B6B; border-radius: 8px; padding: 0.5rem 0.5rem; margin-bottom: 1rem; text-align: center; font-weight: 500; font-size: 16px;">
                        @TempData["ProductError"]
                    </div>
                }

                @if (TempData["ProductSuccess"] != null)
                {
                    <div style="color: #32CD32; background-color: rgba(50, 205, 50, 0.1); border: 1px solid #32CD32; border-radius: 8px; padding: 0.5rem 0.5rem; margin-bottom: 1rem; text-align: center; font-weight: 500; font-size: 16px;">
                        @TempData["ProductSuccess"]
                    </div>
                }
            </div>

            <input type="hidden" id="formAction" name="action" />

            <div class="button-group">
                <small style="text-align: center; font-size: 14px">Select from table to Update or Delete</small>
                <div class="button-row">
                    <button type="submit" onclick="setFormAction('Add')" class="btn-form btn-success">Add</button>
                    <button type="submit" onclick="setFormAction('Update')" class="btn-form btn-warning" id="updateBtn" disabled>Update</button>
                    <button type="submit" onclick="setFormAction('Delete')" class="btn-form btn-danger" id="deleteBtn" disabled>Delete</button>
                </div>
                <div class="button-row">
                    <button type="button" onclick="clearForm()" class="btn-form btn-primary" formnovalidate>Clear Form</button>
                    <button type="submit" onclick="setFormAction('ShowAll')" class="btn-form btn-primary" formnovalidate>Show All</button>
                </div>
            </div>
        </form>
    </div>
</div>

<style>
    .container {
        max-width: 1600px;
        margin: 0rem auto;
        padding: 0 20px;
        color: #F5DEB3;
    }

    .product-container {
        display: grid;
        grid-template-columns: 5fr minmax(280px, 1fr);
        gap: 1rem;
        min-height: 700px;
    }

    .search-container {
        margin-bottom: 1rem;
        padding: 0 0.5rem;
    }

    .search-input {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1px solid rgba(245, 222, 179, 0.3);
        border-radius: 12px;
        background: rgba(255, 255, 255, 0.05);
        color: #F5DEB3;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        backdrop-filter: blur(5px);
    }

        .search-input:focus {
            outline: none;
            border-color: #8B4513;
            background: rgba(255, 255, 255, 0.08);
            box-shadow: 0 0 10px rgba(139, 69, 19, 0.3);
        }

        .search-input::placeholder {
            color: rgba(245, 222, 179, 0.6);
        }

    .search-info {
        margin-top: 0.5rem;
        font-size: 0.85rem;
        color: rgba(245, 222, 179, 0.7);
        text-align: center;
    }

    .product-management {
        background: rgba(255, 255, 255, 0.04);
        border-radius: 20px;
        padding: 0.4rem;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(245, 222, 179, 0.1);
        animation: slideUp 0.3s ease-out;
        position: sticky;
    }

        .product-management h2, .product-display h2 {
            color: #F5DEB3;
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: .5rem;
            text-align: center;
            text-shadow: 1px 1px 3px rgba(0,0,0,0.3);
            border-bottom: 2px solid #8B4513;
        }

    .product-display {
        background: rgba(255, 255, 255, 0.04);
        padding: .4rem;
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(245, 222, 179, 0.1);
        animation: slideUp 0.3s ease-out;
        min-height: 500px;
    }

    .product-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 1rem;
        background: rgba(255, 255, 255, 0.02);
        border-radius: 12px;
        overflow: hidden;
        font-size: 14px;
    }

        .product-table th,
        .product-table td {
            padding: 0.75rem;
            text-align: center;
            border-bottom: 1px solid rgba(245, 222, 179, 0.1);
            color: #F5DEB3;
        }

        .product-table th {
            background: linear-gradient(135deg, #8B4513 0%, #5D2F0F 100%);
            font-weight: 600;
            font-size: 0.875rem;
            letter-spacing: 0.5px;
        }

        .product-table tr:hover {
            background: rgba(139, 69, 19, 0.1);
        }

        .product-table .selected-row {
            background: rgba(139, 69, 19, 0.2) !important;
            border-left: 3px solid #8B4513;
        }

        .product-table .hidden-row {
            display: none;
        }

    .form-body {
        padding: .5rem .5rem;
    }

    .form-label {
        font-size: 0.8rem;
    }

    .form-input,
    .form-select {
        padding: 0.5rem 1rem;
        font-size: 0.8rem;
    }

    .button-group {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .btn-form {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        gap: 0.5rem;
        min-width: 80px;
    }

        .btn-form:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
</style>

<script>
    let selectedRowElement = null;

    function setFormAction(actionName) {
        document.getElementById('formAction').value = actionName;
    }

    function fillForm(productId, productName, productDescription, price, stock) {
        document.getElementById('hiddenProductId').value = productId;
        document.querySelector('input[name="ProductName"]').value = productName;
        document.querySelector('textarea[name="ProductDescription"]').value = productDescription;
        document.querySelector('input[name="Price"]').value = price;
        document.querySelector('input[name="Stock"]').value = stock;

        document.getElementById('updateBtn').disabled = false;
        document.getElementById('deleteBtn').disabled = false;

        if (selectedRowElement) {
            selectedRowElement.classList.remove('selected-row');
        }
        selectedRowElement = event.target.closest('tr');
        selectedRowElement.classList.add('selected-row');

        document.querySelector('.product-management').scrollIntoView({ behavior: 'smooth', block: 'start' });
    }

    function clearForm() {
        document.getElementById('hiddenProductId').value = '';
        document.querySelector('input[name="ProductName"]').value = '';
        document.querySelector('textarea[name="ProductDescription"]').value = '';
        document.querySelector('input[name="Price"]').value = '';
        document.querySelector('input[name="Stock"]').value = '';
        document.querySelector('input[name="ImageUpload"]').value = '';

        document.getElementById('updateBtn').disabled = true;
        document.getElementById('deleteBtn').disabled = true;

        if (selectedRowElement) {
            selectedRowElement.classList.remove('selected-row');
            selectedRowElement = null;
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const searchInfo = document.getElementById('searchInfo');
        const productTable = document.getElementById('productTable');

        if (searchInput && productTable) {
            searchInput.addEventListener('input', function() {
                const originalTerm = this.value.trim();
                const searchTerm = originalTerm.toLowerCase();
                const rows = productTable.querySelectorAll('tbody .product-row');
                let visibleCount = 0;

                rows.forEach(row => {
                    const productNameCell = row.cells[1];

                    if (productNameCell) {
                        const productName = productNameCell.textContent.toLowerCase();

                        if (searchTerm === '' || productName.includes(searchTerm)) {
                            row.classList.remove('hidden-row');
                            visibleCount++;
                        } else {
                            row.classList.add('hidden-row');
                        }
                    }
                });

                if (searchTerm === '') {
                    searchInfo.textContent = '';
                } else {
                    searchInfo.textContent = `Found ${visibleCount} product(s) matching "${originalTerm}"`;
                }

                if (selectedRowElement && selectedRowElement.classList.contains('hidden-row')) {
                    clearForm();
                }
            });
        }

        const totalRows = document.querySelectorAll('.product-row').length;
        if (searchInfo && totalRows > 0) {
            searchInfo.textContent = `Showing ${totalRows} product(s)`;
        }
    });
</script>